# установка docker

kliny@LAPTOP-9NNQ5QQH:~$ sudo apt install docker.io
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following additional packages will be installed:
  bridge-utils containerd dns-root-data dnsmasq-base pigz runc ubuntu-fan
Suggested packages:
  ifupdown aufs-tools btrfs-progs cgroupfs-mount | cgroup-lite debootstrap docker-doc rinse zfs-fuse | zfsutils
The following NEW packages will be installed:
  bridge-utils containerd dns-root-data dnsmasq-base docker.io pigz runc ubuntu-fan
0 upgraded, 8 newly installed, 0 to remove and 44 not upgraded.
Need to get 66.8 MB of archives.
After this operation, 287 MB of additional disk space will be used.
Do you want to continue? [Y/n] y
Get:1 http://archive.ubuntu.com/ubuntu jammy/universe amd64 pigz amd64 2.6-1 [63.6 kB]
Get:2 http://archive.ubuntu.com/ubuntu jammy/main amd64 bridge-utils amd64 1.7-1ubuntu3 [34.4 kB]
Get:3 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 runc amd64 1.1.0-0ubuntu1.1 [4242 kB]
Get:4 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 containerd amd64 1.5.9-0ubuntu3.1 [28.1 MB]
Get:5 http://archive.ubuntu.com/ubuntu jammy/main amd64 dns-root-data all 2021011101 [5256 B]
Get:6 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 dnsmasq-base amd64 2.86-1.1ubuntu0.1 [354 kB]
Get:7 http://archive.ubuntu.com/ubuntu jammy/universe amd64 docker.io amd64 20.10.12-0ubuntu4 [34.0 MB]
Get:8 http://archive.ubuntu.com/ubuntu jammy/universe amd64 ubuntu-fan all 0.12.16 [35.2 kB]
Fetched 66.8 MB in 22s (3066 kB/s)
Preconfiguring packages ...
Selecting previously unselected package pigz.
(Reading database ... 24122 files and directories currently installed.)
Preparing to unpack .../0-pigz_2.6-1_amd64.deb ...
Unpacking pigz (2.6-1) ...
Selecting previously unselected package bridge-utils.
Preparing to unpack .../1-bridge-utils_1.7-1ubuntu3_amd64.deb ...
Unpacking bridge-utils (1.7-1ubuntu3) ...
Selecting previously unselected package runc.
Preparing to unpack .../2-runc_1.1.0-0ubuntu1.1_amd64.deb ...
Unpacking runc (1.1.0-0ubuntu1.1) ...
Selecting previously unselected package containerd.
Preparing to unpack .../3-containerd_1.5.9-0ubuntu3.1_amd64.deb ...
Unpacking containerd (1.5.9-0ubuntu3.1) ...
Selecting previously unselected package dns-root-data.
Preparing to unpack .../4-dns-root-data_2021011101_all.deb ...
Unpacking dns-root-data (2021011101) ...
Selecting previously unselected package dnsmasq-base.
Preparing to unpack .../5-dnsmasq-base_2.86-1.1ubuntu0.1_amd64.deb ...
Unpacking dnsmasq-base (2.86-1.1ubuntu0.1) ...
Selecting previously unselected package docker.io.
Preparing to unpack .../6-docker.io_20.10.12-0ubuntu4_amd64.deb ...
Unpacking docker.io (20.10.12-0ubuntu4) ...
Selecting previously unselected package ubuntu-fan.
Preparing to unpack .../7-ubuntu-fan_0.12.16_all.deb ...
Unpacking ubuntu-fan (0.12.16) ...
Setting up dnsmasq-base (2.86-1.1ubuntu0.1) ...
Setting up runc (1.1.0-0ubuntu1.1) ...
Setting up dns-root-data (2021011101) ...
Setting up bridge-utils (1.7-1ubuntu3) ...
Setting up pigz (2.6-1) ...
Setting up containerd (1.5.9-0ubuntu3.1) ...
Created symlink /etc/systemd/system/multi-user.target.wants/containerd.service → /lib/systemd/system/containerd.service.
Setting up ubuntu-fan (0.12.16) ...
Created symlink /etc/systemd/system/multi-user.target.wants/ubuntu-fan.service → /lib/systemd/system/ubuntu-fan.service.
invoke-rc.d: could not determine current runlevel
Setting up docker.io (20.10.12-0ubuntu4) ...
Adding group `docker' (GID 117) ...
Done.
Created symlink /etc/systemd/system/multi-user.target.wants/docker.service → /lib/systemd/system/docker.service.
Created symlink /etc/systemd/system/sockets.target.wants/docker.socket → /lib/systemd/system/docker.socket.
invoke-rc.d: unknown initscript, /etc/init.d/docker not found.
invoke-rc.d: could not determine current runlevel
Processing triggers for dbus (1.12.20-2ubuntu4.1) ...
Processing triggers for man-db (2.10.2-1) ...

# установка docker

# docker pull redis

kliny@LAPTOP-9NNQ5QQH:/mnt/c/windows/system32$ docker pull redis
Using default tag: latest
latest: Pulling from library/redis
bb263680fed1: Pull complete
ac509f65c3e9: Pull complete
51afc2cce3df: Pull complete
817f7e347ebd: Pull complete
ab1a1215d5f9: Pull complete
db7c27bf3552: Pull complete
Digest: sha256:6a59f1cbb8d28ac484176d52c473494859a512ddba3ea62a547258cf16c9b3ae
Status: Downloaded newer image for redis:latest
docker.io/library/redis:latest

# docker pull redis

# run redis

kliny@LAPTOP-9NNQ5QQH:/mnt/c/windows/system32$ docker run --name some-redis -d redis
dbf07a25f2090bfe9bf3e6e4c32bbdd435cd2c8370ec518b0d91927f75e4954f

# run redis

# run redis cli

kliny@LAPTOP-9NNQ5QQH:/mnt/c/windows/system32$ docker exec -it 42d0cfc4933952874641df531f1c35b1b44890d396f4f1b89c191acd4bc16261 redis-cli
127.0.0.1:6379>

# run redis cli

# set and get redis keys

127.0.0.1:6379> SET key1 "key one"
OK
127.0.0.1:6379> SET key2 "key two"
OK
127.0.0.1:6379> SET key3 "key three"
OK
127.0.0.1:6379> SET key4 "key four"
OK
127.0.0.1:6379> SET key5 "key five"
OK
127.0.0.1:6379> GET key1
"key one"
127.0.0.1:6379> GET key2
"key two"
127.0.0.1:6379> GET key3
"key three"
127.0.0.1:6379> GET key4
"key four"
127.0.0.1:6379> GET key5
"key five"
127.0.0.1:6379>

# set and get redis keys

# reset keys

127.0.0.1:6379> GETSET key1 "new key one"
"key one"
127.0.0.1:6379> GET key1
"new key one"
127.0.0.1:6379>

# reset keys

# append string to key

127.0.0.1:6379> APPEND key2 " appended value"
(integer) 22
127.0.0.1:6379> GET key2
"key two appended value"

# append string to key

# append number to key

127.0.0.1:6379> SET key6 6
OK
127.0.0.1:6379> INCR key6
(integer) 7
127.0.0.1:6379> GET key6
"7"

# append number to key

# create hashtable

127.0.0.1:6379> HSET myhash 1 "one"
(integer) 1
127.0.0.1:6379> HGETALL myhash
1) "1"
2) "one"	

# create hashtable

# create set

127.0.0.1:6379> SADD myset one two three
(integer) 3
127.0.0.1:6379> SMEMBERS myset
1) "two"
2) "one"
3) "three"

# create set

# SDIFF

127.0.0.1:6379> SADD myset1 1 2 3
(integer) 3
127.0.0.1:6379> SADD myset2 3 2 1
(integer) 3
127.0.0.1:6379> SDIFF myset1 myset2
(empty array)

# SDIFF

# SMOVE

127.0.0.1:6379> SMOVE myset1 myset 1
(integer) 1
127.0.0.1:6379> SMEMBERS myset
1) "1"
2) "two"
3) "one"
4) "three"

# SMOVE

# SPOP

127.0.0.1:6379> SMEMBERS myset
1) "1"
2) "two"
3) "one"
4) "three"
127.0.0.1:6379> SPOP myset
"1"
127.0.0.1:6379> SMEMBERS myset
1) "two"
2) "one"
3) "three"

# SPOP

# SUNION

127.0.0.1:6379> SUNION myset myset1 myset2
1) "1"
2) "3"
3) "one"
4) "three"
5) "two"
6) "2"

# SUNION

# SREM

127.0.0.1:6379> SREM myset "two"
(integer) 1
127.0.0.1:6379> SMEMBERS myset
1) "one"
2) "three"

# SREM

# ZADD

127.0.0.1:6379> ZADD myzset 1 "one"
(integer) 1
127.0.0.1:6379> ZADD myzset 1 "uno"
(integer) 1
127.0.0.1:6379> ZADD myzset 2 "two" 3 "three"
(integer) 2
127.0.0.1:6379> ZRANGE myzset 0 -1
1) "one"
2) "uno"
3) "two"
4) "three"

# ZADD

# ZCOUNT

127.0.0.1:6379> ZCOUNT myzset -inf +inf
(integer) 4

# ZCOUNT

# ZDIFF

127.0.0.1:6379> ZADD zset1 1 "one"
(integer) 1
127.0.0.1:6379> ZADD zset1 2 "two"
(integer) 1
127.0.0.1:6379> ZADD zset1 3 "three"
(integer) 1
127.0.0.1:6379> ZADD zset2 1 "one"
(integer) 1
127.0.0.1:6379> ZADD zset2 2 "two"
(integer) 1
127.0.0.1:6379> ZDIFF 2 zset1 zset2 WITHSCORES
1) "three"
2) "3"

# ZDIFF

# ZPOPMAX

127.0.0.1:6379> ZPOPMAX zset1 2
1) "three"
2) "3"
3) "two"
4) "2"

# ZPOPMAX

# ZPOPMIN

127.0.0.1:6379> ZPOPMIN zset1 1
1) "one"
2) "1"

# ZPOPMIN

# ZUNION

127.0.0.1:6379> ZUNION 2 zset1 zset2
1) "one"
2) "two"

# ZUNION

# ZMSCORE

127.0.0.1:6379> ZMSCORE myzset "one" "two" "nofield"
1) "1"
2) "2"
3) (nil)

# ZMSCORE

# ZLEXCOUNT

127.0.0.1:6379> ZADD myzset 0 a 0 b 0 c 0 d 0 e
(integer) 5
127.0.0.1:6379> ZLEXCOUNT myzset [b [d
(integer) 3

# ZLEXCOUNT

############################

# ZRANGE

127.0.0.1:6379> ZRANGE myzset 0 -1
1) "a"
2) "b"
3) "c"
4) "d"
5) "e"
6) "one"
7) "uno"
8) "two"
9) "three"
127.0.0.1:6379> ZRANGE myzset 1 3
1) "b"
2) "c"
3) "d"
127.0.0.1:6379> ZRANGE myzset (1 (3 BYSCORE
1) "two"

# ZRANGE

# TIME

127.0.0.1:6379> TIME
1) "1676482426"
2) "353551"

# TIME

# SLOWLOG

127.0.0.1:6379> SLOWLOG GET 2
1) 1) (integer) 0
   2) (integer) 1676481363
   3) (integer) 25393
   4) 1) "ZLEXCOUNT"
      2) "zser1"
      3) "1"
      4) "1"
   5) "127.0.0.1:49738"
   6) ""

# SLOWLOG

# RPUSH

127.0.0.1:6379> RPUSH mylist "hello"
(integer) 1
127.0.0.1:6379> RPUSH mylist "world"
(integer) 2

# RPUSH

# LRANGE

127.0.0.1:6379> LRANGE mylist 0 -1
1) "hello"
2) "world"

# LRANGE